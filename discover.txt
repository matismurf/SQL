SELECT * FROM aluno WHERE matricula = 1

SELECT * FROM aluno WHERE nome like '%A%'

SELECT matricula, cpf FROM aluno WHERE nome like '%G%'

SELECT * FROM aluno where cpf = 12345678945

select * from aluno where matricula = 3
select * from aluno where responsavel like '%a'
select * from aluno where matricula > 1
select * from aluno where matricula < 3
select * from aluno where matricula >= 2
select * from aluno where matricula <= 2
select * from aluno where matricula <> 1
select * from aluno where matricula != 2

select * from aluno where matricula = 1 + 1
select * from aluno where matricula = 2 - 1
select * from aluno where matricula = 3 * 1
select * from aluno where matricula = 2 / 1
select * from aluno where matricula = 3 % 2
select * from aluno where nome like 'J%' and matricula < 2
select * from aluno where matricula > 1 or nome like 'j%'
select * from aluno where matricula between 2 and 3
select * from aluno where matricula not between 2 and 3
select * from aluno where matricula in (1,2)
select * from aluno where matricula is null
select * from aluno where matricula is not null

SELECT * FROM funcionarios
JOIN departamentos
ON departamentos.id_dept = funcionarios.id_departamento

SELECT * FROM funcionarios
JOIN departamentos
ON funcionarios.id_departamento = departamentos.id_dept
WHERE funcionarios.id_departamento = 2

SELECT funcionarios.nome, funcionarios.cpf, departamentos.descricao
FROM funcionarios
JOIN departamentos
ON funcionarios.id_departamento = departamentos.id_dept

SELECT func.nome as 'Nome', func.cpf as 'CPF', dep.descricao as 'departamento'
from funcionarios as func
JOIN departamentos as dep
ON func.id_departamento = dep.id_dept

SELECT * FROM funcionarios
LEFT OUTER JOIN departamentos
ON funcionarios.id_departamento = departamentos.id_dept

SELECT * FROM professor
ORDER BY cpf desc

select * from aluno limit 2

select * from funcionarios
limit  4 offset 3

select count(nome) from funcionarios

select id_departamento,count(id_departamento) from funcionarios group by id_departamento

select departamentos.descricao,count(funcionarios.id_departamento) 
from funcionarios
join departamentos
on funcionarios.id_departamento = departamentos.id_dept
group by departamentos.id_dept

select departamentos.descricao,count(funcionarios.id_departamento) from funcionarios
join departamentos
on funcionarios.id_departamento = departamentos.id_dept
group by departamentos.id_dept
having count(funcionarios.id_departamento)>=2

PARA CRIAR UM DATABASE, BASTA CRIAR UM ARQUIVO DE TEXTO E RENOMEAR PARA
nomedobanco.sqlite

create table alunos (
	matricula INTEGER PRIMARY KEY AUTOINCREMENT,
  nome TEXT,
  cpf INTEGER UNIQUE,
  responsavel TEXT
)

CREATE TABLE professores(
	id_professor INTEGER PRIMARY KEY AUTOINCREMENT,
  nome TEXT,
  cpf INTEGER UNIQUE,
  materia TEXT
)

CREATE TABLE aulas(
	id_professor INTEGER,
  matricula INTEGER,
  FOREIGN KEY(id_professor) REFERENCES professores(id_professor),
  FOREIGN KEY(matricula) REFERENCES alunos(matricula)
)

alter table aluno RENAME TO alunos
alter table professor RENAME TO professores
alter table aulas RENAME COLUMN id_aluno TO matricula_aluno

drop table alunos
















